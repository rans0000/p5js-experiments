{"mappings":"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","sources":["<anon>","src/scripts/noise-2d.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire326b\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire326b\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n\nvar $e93rA = parcelRequire(\"e93rA\");\nconst $6d5f1352acf1be57$var$options = {\n    xOffset: 0,\n    yOffset: 0,\n    phase: 0,\n    phaseIncrement: 0.1,\n    isAnimated: true,\n    increment: 0.07,\n    height: 200,\n    width: 200,\n    isFullscreen: false,\n    dimensions: 200,\n    detail: 4,\n    difference: 0.5\n};\nconst $6d5f1352acf1be57$var$sketch = (p5)=>{\n    const gui = new (0, $e93rA.GUI)({\n        autoPlace: false\n    });\n    gui.domElement.id = \"gui\";\n    document.getElementById(\"gui\")?.appendChild(gui.domElement);\n    gui.add($6d5f1352acf1be57$var$options, \"phase\", 0, 200, 0.01);\n    gui.add($6d5f1352acf1be57$var$options, \"increment\", 0, 0.1, 0.001).name(\"scale\");\n    gui.add($6d5f1352acf1be57$var$options, \"dimensions\", 50, 800, 1).onChange((dimensions)=>{\n        $6d5f1352acf1be57$var$options.width = dimensions, $6d5f1352acf1be57$var$options.height = dimensions;\n    });\n    gui.add($6d5f1352acf1be57$var$options, \"detail\", 1, 16, 1).onChange((detail)=>{\n        $6d5f1352acf1be57$var$options.detail = detail;\n        p5.noiseDetail(detail, $6d5f1352acf1be57$var$options.difference);\n    });\n    gui.add($6d5f1352acf1be57$var$options, \"difference\", 0, 1, 0.1).onChange((difference)=>{\n        $6d5f1352acf1be57$var$options.difference = difference;\n        p5.noiseDetail($6d5f1352acf1be57$var$options.detail, difference);\n    });\n    gui.add($6d5f1352acf1be57$var$options, \"isAnimated\");\n    gui.add($6d5f1352acf1be57$var$options, \"isFullscreen\").name(\"fullscreen\").onChange(()=>$6d5f1352acf1be57$var$resizeDisplay(p5));\n    //setup\n    p5.setup = ()=>{\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\n        canvas.parent(\"app\");\n        p5.background(\"white\");\n        p5.pixelDensity(1);\n        window.addEventListener(\"resize\", ()=>$6d5f1352acf1be57$var$resizeDisplay(p5));\n    };\n    //draw\n    p5.draw = ()=>{\n        p5.background(\"#3c233f\");\n        p5.loadPixels();\n        $6d5f1352acf1be57$var$options.yOffset = 0;\n        const { innerWidth: innerWidth, innerHeight: innerHeight } = window;\n        const X = innerWidth / 2 - $6d5f1352acf1be57$var$options.width / 2;\n        const Y = innerHeight / 2 - $6d5f1352acf1be57$var$options.height / 2;\n        for(let row = 0; row < $6d5f1352acf1be57$var$options.height; row++){\n            $6d5f1352acf1be57$var$options.xOffset = $6d5f1352acf1be57$var$options.phase;\n            for(let col = 0; col < $6d5f1352acf1be57$var$options.width; col++){\n                // const index = (row * options.width + col) * 4;\n                const T = innerWidth * (Y + row);\n                const L = X + col;\n                const index = (T + L) * 4;\n                const value = p5.noise($6d5f1352acf1be57$var$options.xOffset, $6d5f1352acf1be57$var$options.yOffset);\n                p5.pixels[index + 0] = value * 255;\n                p5.pixels[index + 1] = value * 255;\n                p5.pixels[index + 2] = value * 255;\n                p5.pixels[index + 3] = 255;\n                $6d5f1352acf1be57$var$options.xOffset += $6d5f1352acf1be57$var$options.increment;\n            }\n            $6d5f1352acf1be57$var$options.yOffset += $6d5f1352acf1be57$var$options.increment;\n        }\n        $6d5f1352acf1be57$var$options.phase += $6d5f1352acf1be57$var$options.phaseIncrement * ~~$6d5f1352acf1be57$var$options.isAnimated;\n        p5.updatePixels();\n    };\n};\nfunction $6d5f1352acf1be57$var$resizeDisplay(canvas) {\n    $6d5f1352acf1be57$var$options.width = $6d5f1352acf1be57$var$options.isFullscreen ? window.innerWidth : $6d5f1352acf1be57$var$options.dimensions;\n    $6d5f1352acf1be57$var$options.height = $6d5f1352acf1be57$var$options.isFullscreen ? window.innerHeight : $6d5f1352acf1be57$var$options.dimensions;\n    canvas.resizeCanvas(window.innerWidth, window.innerHeight);\n}\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($6d5f1352acf1be57$var$sketch);\n\n\n//# sourceMappingURL=noise-2d.8b454c12.js.map\n","import P5 from 'p5';\r\nimport { GUI } from 'dat.gui';\r\n\r\nconst options = {\r\n    xOffset: 0,\r\n    yOffset: 0,\r\n    phase: 0,\r\n    phaseIncrement: 0.1,\r\n    isAnimated: true,\r\n    increment: 0.07,\r\n    height: 200,\r\n    width: 200,\r\n    isFullscreen: false,\r\n    dimensions: 200,\r\n    detail: 4,\r\n    difference: 0.5\r\n};\r\n\r\nconst sketch = (p5: P5) => {\r\n    const gui = new GUI({ autoPlace: false });\r\n    gui.domElement.id = 'gui';\r\n    document.getElementById('gui')?.appendChild(gui.domElement);\r\n\r\n    gui.add(options, 'phase', 0, 200, 0.01);\r\n    gui.add(options, 'increment', 0, 0.1, 0.001).name('scale');\r\n    gui.add(options, 'dimensions', 50, 800, 1).onChange((dimensions: number) => {\r\n        (options.width = dimensions), (options.height = dimensions);\r\n    });\r\n    gui.add(options, 'detail', 1, 16, 1).onChange((detail: number) => {\r\n        options.detail = detail;\r\n        p5.noiseDetail(detail, options.difference);\r\n    });\r\n    gui.add(options, 'difference', 0, 1, 0.1).onChange((difference: number) => {\r\n        options.difference = difference;\r\n        p5.noiseDetail(options.detail, difference);\r\n    });\r\n    gui.add(options, 'isAnimated');\r\n    gui.add(options, 'isFullscreen')\r\n        .name('fullscreen')\r\n        .onChange(() => resizeDisplay(p5));\r\n\r\n    //setup\r\n    p5.setup = () => {\r\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\r\n        canvas.parent('app');\r\n        p5.background('white');\r\n        p5.pixelDensity(1);\r\n\r\n        window.addEventListener('resize', () => resizeDisplay(p5));\r\n    };\r\n\r\n    //draw\r\n    p5.draw = () => {\r\n        p5.background('#3c233f');\r\n        p5.loadPixels();\r\n\r\n        options.yOffset = 0;\r\n        const { innerWidth, innerHeight } = window;\r\n\r\n        const X = innerWidth / 2 - options.width / 2;\r\n        const Y = innerHeight / 2 - options.height / 2;\r\n\r\n        for (let row = 0; row < options.height; row++) {\r\n            options.xOffset = options.phase;\r\n\r\n            for (let col = 0; col < options.width; col++) {\r\n                // const index = (row * options.width + col) * 4;\r\n\r\n                const T = innerWidth * (Y + row);\r\n                const L = X + col;\r\n                const index = (T + L) * 4;\r\n\r\n                const value = p5.noise(options.xOffset, options.yOffset);\r\n\r\n                p5.pixels[index + 0] = value * 255;\r\n                p5.pixels[index + 1] = value * 255;\r\n                p5.pixels[index + 2] = value * 255;\r\n                p5.pixels[index + 3] = 255;\r\n\r\n                options.xOffset += options.increment;\r\n            }\r\n            options.yOffset += options.increment;\r\n        }\r\n\r\n        options.phase += options.phaseIncrement * ~~options.isAnimated;\r\n\r\n        p5.updatePixels();\r\n    };\r\n};\r\n\r\nfunction resizeDisplay(canvas: P5) {\r\n    options.width = options.isFullscreen ? window.innerWidth : options.dimensions;\r\n    options.height = options.isFullscreen ? window.innerHeight : options.dimensions;\r\n    canvas.resizeCanvas(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nnew P5(sketch);\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Pz0b","$e93rA","$6d5f1352acf1be57$var$options","xOffset","yOffset","phase","phaseIncrement","isAnimated","increment","height","width","isFullscreen","dimensions","detail","difference","$6d5f1352acf1be57$var$resizeDisplay","canvas","window","innerWidth","innerHeight","resizeCanvas","a","__esModule","default","p5","gui","GUI","autoPlace","domElement","document","getElementById","appendChild","add","name","onChange","noiseDetail","setup","createCanvas","parent","background","pixelDensity","addEventListener","draw","loadPixels","X","Y","row","col","index","T","L","value","noise","pixels","updatePixels"],"version":3,"file":"noise-2d.8b454c12.js.map"}