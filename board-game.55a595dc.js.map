{"mappings":"IEOI,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,M,E,EDGQ,EAKA,E,E,E,O,C,sB,I,G,E,E,O,C,oB,I,G,E,E,O,C,Y,I,G,E,E,O,C,Q,I,GAZL,IAAM,EAAsB,CAAE,EAAG,CAAE,EAC7B,EAA4B,CACrC,IAAK,CAAA,EACL,MAAO,CAAA,EACP,OAAQ,CAAA,EACR,KAAM,CAAA,CACV,C,EACY,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,E,C,E,I,C,E,C,O,C,C,E,M,C,E,C,S,C,C,E,K,C,E,C,Q,CAKA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,E,C,E,M,C,E,C,S,C,C,E,E,C,E,C,I,G,I,E,E,S,E,E,S,E,E,SEsHZ,EArHA,MAQI,YAAY,CAAM,CAAE,CAA8B,CAAE,CAChD,IAAM,EAAsB,CACxB,KAAM,IACN,OAAQ,EAAG,YAAY,CAAC,EAAG,GAC3B,YAAa,CAAA,EACb,cAAe,AAAA,EAAA,KAAI,CAAE,MAAM,CAC3B,GAAG,CAAO,AACd,CACA,CAAA,IAAI,CAAC,EAAE,CAAG,EACV,IAAI,CAAC,IAAI,CAAG,EAAO,IAAI,CACvB,IAAI,CAAC,MAAM,CAAG,EAAO,MAAM,CAC3B,IAAI,CAAC,WAAW,CAAG,EAAO,WAAW,CACrC,IAAI,CAAC,MAAM,CAAG,AAoEtB,SAAoB,CAAM,CAAE,CAAiB,CAAE,CAAiB,EAC5D,IAAM,EAAiB,CAEnB,CAAE,GAAI,EAAG,IAAK,EAAG,YAAY,CAAC,EAAG,GAAI,eAAgB,CAAC,EAAG,EAAG,EAAE,CAAE,MAAO,KAAA,CAAU,EACjF,CAAE,GAAI,EAAG,IAAK,EAAG,YAAY,CAAC,EAAG,GAAI,e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","sources":["<anon>","src/utils/utils.ts","src/scripts/board-game.ts","src/libs/cross-board.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebf15\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebf15\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fK5g3\", function(module, exports) {\n\n$parcel$export(module.exports, \"defaultEntityConfig\", () => $28770b279d7ab5b1$export$73820bb3da69f923);\n$parcel$export(module.exports, \"defaultEdgeConfig\", () => $28770b279d7ab5b1$export$1ea8cd15d9ca5dee);\n$parcel$export(module.exports, \"MOUSE_BTN\", () => $28770b279d7ab5b1$export$bfd2dc5313efa3a3);\n$parcel$export(module.exports, \"Gamer\", () => $28770b279d7ab5b1$export$4008efb11b076cd5);\nconst $28770b279d7ab5b1$export$73820bb3da69f923 = {\n    r: 5\n};\nconst $28770b279d7ab5b1$export$1ea8cd15d9ca5dee = {\n    top: true,\n    right: true,\n    bottom: true,\n    left: true\n};\nvar $28770b279d7ab5b1$export$bfd2dc5313efa3a3;\n(function(MOUSE_BTN) {\n    MOUSE_BTN[MOUSE_BTN[\"LEFT\"] = 0] = \"LEFT\";\n    MOUSE_BTN[MOUSE_BTN[\"MIDDLE\"] = 1] = \"MIDDLE\";\n    MOUSE_BTN[MOUSE_BTN[\"RIGHT\"] = 2] = \"RIGHT\";\n})($28770b279d7ab5b1$export$bfd2dc5313efa3a3 || ($28770b279d7ab5b1$export$bfd2dc5313efa3a3 = {}));\nvar $28770b279d7ab5b1$export$4008efb11b076cd5;\n(function(Gamer) {\n    Gamer[Gamer[\"PLAYER\"] = 0] = \"PLAYER\";\n    Gamer[Gamer[\"AI\"] = 1] = \"AI\";\n})($28770b279d7ab5b1$export$4008efb11b076cd5 || ($28770b279d7ab5b1$export$4008efb11b076cd5 = {}));\n\n});\n\n\nvar $e93rA = parcelRequire(\"e93rA\");\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n\nvar $fK5g3 = parcelRequire(\"fK5g3\");\nclass $dc260c8a25c170be$var$CrossBoard {\n    constructor(p5, _config){\n        const config = {\n            size: 400,\n            offset: p5.createVector(0, 0),\n            showHelpers: false,\n            currentPlayer: (0, $fK5g3.Gamer).PLAYER,\n            ..._config\n        };\n        this.p5 = p5;\n        this.size = config.size;\n        this.offset = config.offset;\n        this.showHelpers = config.showHelpers;\n        this.points = $dc260c8a25c170be$var$buildBoard(this.p5, this.size / 5, this.offset);\n        this.cellRadius = 50;\n    }\n    update(deltaTime) {\n        return this;\n    }\n    draw() {\n        this.p5.cursor(this.p5.ARROW);\n        const dimension = this.size / 5;\n        const length = this.points.length;\n        for(let i = 0; i < length; i++){\n            // draw the board\n            this.p5.strokeWeight(2);\n            this.p5.stroke(255);\n            this.p5.circle(this.points[i].pos.x * dimension, this.points[i].pos.y * dimension, 10);\n            this.points[i].neighbourIndex.forEach((index)=>{\n                this.p5.stroke(255);\n                this.p5.line(this.points[i].pos.x, this.points[i].pos.y, this.points[index].pos.x, this.points[index].pos.y);\n            });\n            // draw hover\n            const distance = this.p5.createVector(this.p5.mouseX, this.p5.mouseY).sub(this.points[i].pos).mag();\n            if (distance < this.cellRadius) {\n                // console.log(distance);\n                this.p5.cursor(this.p5.HAND);\n                this.p5.noStroke();\n                this.p5.fill(255);\n                this.p5.circle(this.points[i].pos.x, this.points[i].pos.y, this.p5.constrain(this.cellRadius - distance, 0, this.cellRadius * 0.3));\n            }\n        }\n        // draw connections\n        if (this.showHelpers) for(let i = 0; i < length; i++){\n            const distance = this.p5.createVector(this.p5.mouseX, this.p5.mouseY).sub(this.points[i].pos).mag();\n            if (distance > this.cellRadius) continue;\n            this.points[i].neighbourIndex.forEach((index)=>{\n                this.p5.stroke(255, 200, 100);\n                this.p5.strokeWeight(8);\n                this.p5.line(this.points[i].pos.x, this.points[i].pos.y, this.points[index].pos.x, this.points[index].pos.y);\n            });\n        }\n        return this;\n    }\n}\n/**--------------------------------- */ // functions\nfunction $dc260c8a25c170be$var$buildBoard(p5, dimension, offset) {\n    const cells = [\n        // { id: 0, pos: p5.createVector(0, 0), neighbourIndex: [[1,2], [3,6], [5,10]], owner: undefined },\n        {\n            id: 0,\n            pos: p5.createVector(0, 0),\n            neighbourIndex: [\n                1,\n                3,\n                5\n            ],\n            owner: undefined\n        },\n        {\n            id: 1,\n            pos: p5.createVector(2, 0),\n            neighbourIndex: [\n                0,\n                2,\n                3,\n                4\n            ],\n            owner: undefined\n        },\n        {\n            id: 2,\n            pos: p5.createVector(4, 0),\n            neighbourIndex: [\n                1,\n                4,\n                7\n            ],\n            owner: undefined\n        },\n        {\n            id: 3,\n            pos: p5.createVector(1, 1),\n            neighbourIndex: [\n                0,\n                1,\n                6,\n                5\n            ],\n            owner: undefined\n        },\n        {\n            id: 4,\n            pos: p5.createVector(3, 1),\n            neighbourIndex: [\n                1,\n                2,\n                7,\n                6\n            ],\n            owner: undefined\n        },\n        {\n            id: 5,\n            pos: p5.createVector(0, 2),\n            neighbourIndex: [\n                0,\n                3,\n                6,\n                8,\n                10\n            ],\n            owner: undefined\n        },\n        {\n            id: 6,\n            pos: p5.createVector(2, 2),\n            neighbourIndex: [\n                3,\n                1,\n                4,\n                7,\n                9,\n                11,\n                8,\n                5\n            ],\n            owner: undefined\n        },\n        {\n            id: 7,\n            pos: p5.createVector(4, 2),\n            neighbourIndex: [\n                4,\n                2,\n                12,\n                9,\n                6\n            ],\n            owner: undefined\n        },\n        {\n            id: 8,\n            pos: p5.createVector(1, 3),\n            neighbourIndex: [\n                5,\n                6,\n                11,\n                10\n            ],\n            owner: undefined\n        },\n        {\n            id: 9,\n            pos: p5.createVector(3, 3),\n            neighbourIndex: [\n                6,\n                7,\n                12,\n                11\n            ],\n            owner: undefined\n        },\n        {\n            id: 10,\n            pos: p5.createVector(0, 4),\n            neighbourIndex: [\n                5,\n                8,\n                11\n            ],\n            owner: undefined\n        },\n        {\n            id: 11,\n            pos: p5.createVector(2, 4),\n            neighbourIndex: [\n                8,\n                6,\n                9,\n                12,\n                10\n            ],\n            owner: undefined\n        },\n        {\n            id: 12,\n            pos: p5.createVector(4, 4),\n            neighbourIndex: [\n                9,\n                7,\n                11\n            ],\n            owner: undefined\n        }\n    ];\n    for (const cell of cells)cell.pos = p5.createVector(cell.pos.x * dimension, cell.pos.y * dimension).add(offset);\n    return cells;\n}\nvar $dc260c8a25c170be$export$2e2bcd8739ae039 = $dc260c8a25c170be$var$CrossBoard;\n\n\n\nvar $fK5g3 = parcelRequire(\"fK5g3\");\n/**--------------------------------- */ // variables & types\nlet $0af410a66d517047$var$board;\n/**--------------------------------- */ // sketch\nconst $0af410a66d517047$var$sketch = (p5)=>{\n    const options = {\n        size: 400,\n        showHelpers: true\n    };\n    const gui = new (0, $e93rA.GUI)({\n        autoPlace: false\n    });\n    gui.domElement.id = \"gui\";\n    document.getElementById(\"gui\")?.appendChild(gui.domElement);\n    gui.add(options, \"showHelpers\");\n    gui.add(options, \"size\", 200, 500, 10);\n    /** setup */ p5.setup = ()=>{\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\n        canvas.parent(\"app\");\n        p5.background(\"white\");\n        p5.pixelDensity(1);\n        p5.colorMode(p5.HSB);\n        window.addEventListener(\"resize\", ()=>resizeDisplay(p5));\n        init(p5);\n    // p5.noLoop();\n    };\n    /** draw */ p5.draw = ()=>{\n        p5.background(200, 60, 10);\n        $0af410a66d517047$var$board?.update(p5.deltaTime)?.draw();\n    };\n    /**--------------------------------- */ // functions\n    function resizeDisplay(canvas) {\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\n    }\n    function init(p5) {\n        p5.background(200, 60, 10);\n        //setup board\n        $0af410a66d517047$var$board = new (0, $dc260c8a25c170be$export$2e2bcd8739ae039)(p5, {\n            currentPlayer: (0, $fK5g3.Gamer).PLAYER,\n            size: options.size,\n            offset: p5.createVector(window.innerWidth / 2 - options.size / 2, window.innerHeight / 2 - options.size / 2),\n            showHelpers: options.showHelpers\n        });\n    }\n/**--------------------------------- */ // classes\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($0af410a66d517047$var$sketch);\n\n\n//# sourceMappingURL=board-game.55a595dc.js.map\n","import p5 from 'p5';\r\nimport { TEdges } from './types';\r\n\r\nexport const defaultEntityConfig = { r: 5 };\r\nexport const defaultEdgeConfig: TEdges = {\r\n    top: true,\r\n    right: true,\r\n    bottom: true,\r\n    left: true\r\n};\r\nexport enum MOUSE_BTN {\r\n    LEFT,\r\n    MIDDLE,\r\n    RIGHT\r\n}\r\nexport enum Gamer {\r\n    PLAYER,\r\n    AI\r\n}\r\nexport type TTicTacToeCell = {\r\n    pos: p5.Vector;\r\n    owner: Gamer | undefined;\r\n};\r\nexport type TGameStatus = {\r\n    filledCells: number;\r\n    winner: Gamer | undefined;\r\n    cells: TTicTacToeCell[];\r\n};\r\n","import { GUI } from 'dat.gui';\r\nimport P5 from 'p5';\r\nimport CrossBoard from 'src/libs/cross-board';\r\nimport { Gamer } from 'src/utils/utils';\r\n\r\n/**--------------------------------- */\r\n// variables & types\r\nlet board: CrossBoard;\r\n\r\n/**--------------------------------- */\r\n// sketch\r\nconst sketch = (p5: P5) => {\r\n    const options = {\r\n        size: 400,\r\n        showHelpers: true\r\n    };\r\n\r\n    const gui = new GUI({ autoPlace: false });\r\n    gui.domElement.id = 'gui';\r\n    document.getElementById('gui')?.appendChild(gui.domElement);\r\n    gui.add(options, 'showHelpers');\r\n    gui.add(options, 'size', 200, 500, 10);\r\n\r\n    /** setup */\r\n    p5.setup = () => {\r\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\r\n        canvas.parent('app');\r\n        p5.background('white');\r\n        p5.pixelDensity(1);\r\n        p5.colorMode(p5.HSB);\r\n        window.addEventListener('resize', () => resizeDisplay(p5));\r\n        init(p5);\r\n        // p5.noLoop();\r\n    };\r\n\r\n    /** draw */\r\n    p5.draw = () => {\r\n        p5.background(200, 60, 10);\r\n        board?.update(p5.deltaTime)?.draw();\r\n    };\r\n\r\n    /**--------------------------------- */\r\n    // functions\r\n\r\n    function resizeDisplay(canvas: P5) {\r\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    function init(p5: P5) {\r\n        p5.background(200, 60, 10);\r\n\r\n        //setup board\r\n        board = new CrossBoard(p5, {\r\n            currentPlayer: Gamer.PLAYER,\r\n            size: options.size,\r\n            offset: p5.createVector(window.innerWidth / 2 - options.size / 2, window.innerHeight / 2 - options.size / 2),\r\n            showHelpers: options.showHelpers\r\n        });\r\n    }\r\n\r\n    /**--------------------------------- */\r\n    // classes\r\n};\r\n\r\nnew P5(sketch);\r\n","import P5 from 'p5';\r\nimport { Gamer } from 'src/utils/utils';\r\n\r\ntype TCrossBoard = {\r\n    size: number;\r\n    offset: P5.Vector;\r\n    showHelpers: boolean;\r\n    currentPlayer: Gamer;\r\n};\r\ntype TCell = {\r\n    id: number;\r\n    pos: P5.Vector;\r\n    neighbourIndex: number[];\r\n    owner: Gamer | undefined;\r\n};\r\n\r\nclass CrossBoard {\r\n    p5: P5;\r\n    size: number;\r\n    offset: P5.Vector;\r\n    showHelpers: boolean;\r\n    points: TCell[];\r\n    cellRadius: number;\r\n\r\n    constructor(p5: P5, _config?: Partial<TCrossBoard>) {\r\n        const config: TCrossBoard = {\r\n            size: 400,\r\n            offset: p5.createVector(0, 0),\r\n            showHelpers: false,\r\n            currentPlayer: Gamer.PLAYER,\r\n            ..._config\r\n        };\r\n        this.p5 = p5;\r\n        this.size = config.size;\r\n        this.offset = config.offset;\r\n        this.showHelpers = config.showHelpers;\r\n        this.points = buildBoard(this.p5, this.size / 5, this.offset);\r\n        this.cellRadius = 50;\r\n    }\r\n\r\n    update(deltaTime: number): this {\r\n        return this;\r\n    }\r\n\r\n    draw(): this {\r\n        this.p5.cursor(this.p5.ARROW);\r\n        const dimension = this.size / 5;\r\n        const length = this.points.length;\r\n        for (let i = 0; i < length; i++) {\r\n            // draw the board\r\n            this.p5.strokeWeight(2);\r\n            this.p5.stroke(255);\r\n            this.p5.circle(this.points[i].pos.x * dimension, this.points[i].pos.y * dimension, 10);\r\n\r\n            this.points[i].neighbourIndex.forEach((index) => {\r\n                this.p5.stroke(255);\r\n                this.p5.line(\r\n                    this.points[i].pos.x,\r\n                    this.points[i].pos.y,\r\n                    this.points[index].pos.x,\r\n                    this.points[index].pos.y\r\n                );\r\n            });\r\n\r\n            // draw hover\r\n            const distance = this.p5.createVector(this.p5.mouseX, this.p5.mouseY).sub(this.points[i].pos).mag();\r\n            if (distance < this.cellRadius) {\r\n                // console.log(distance);\r\n\r\n                this.p5.cursor(this.p5.HAND);\r\n                this.p5.noStroke();\r\n                this.p5.fill(255);\r\n                this.p5.circle(\r\n                    this.points[i].pos.x,\r\n                    this.points[i].pos.y,\r\n                    this.p5.constrain(this.cellRadius - distance, 0, this.cellRadius * 0.3)\r\n                );\r\n            }\r\n        }\r\n        // draw connections\r\n        if (this.showHelpers) {\r\n            for (let i = 0; i < length; i++) {\r\n                const distance = this.p5.createVector(this.p5.mouseX, this.p5.mouseY).sub(this.points[i].pos).mag();\r\n                if (distance > this.cellRadius) continue;\r\n                this.points[i].neighbourIndex.forEach((index) => {\r\n                    this.p5.stroke(255, 200, 100);\r\n                    this.p5.strokeWeight(8);\r\n                    this.p5.line(\r\n                        this.points[i].pos.x,\r\n                        this.points[i].pos.y,\r\n                        this.points[index].pos.x,\r\n                        this.points[index].pos.y\r\n                    );\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n/**--------------------------------- */\r\n// functions\r\n\r\nfunction buildBoard(p5: P5, dimension: number, offset: P5.Vector) {\r\n    const cells: TCell[] = [\r\n        // { id: 0, pos: p5.createVector(0, 0), neighbourIndex: [[1,2], [3,6], [5,10]], owner: undefined },\r\n        { id: 0, pos: p5.createVector(0, 0), neighbourIndex: [1, 3, 5], owner: undefined },\r\n        { id: 1, pos: p5.createVector(2, 0), neighbourIndex: [0, 2, 3, 4], owner: undefined },\r\n        { id: 2, pos: p5.createVector(4, 0), neighbourIndex: [1, 4, 7], owner: undefined },\r\n\r\n        { id: 3, pos: p5.createVector(1, 1), neighbourIndex: [0, 1, 6, 5], owner: undefined },\r\n        { id: 4, pos: p5.createVector(3, 1), neighbourIndex: [1, 2, 7, 6], owner: undefined },\r\n\r\n        { id: 5, pos: p5.createVector(0, 2), neighbourIndex: [0, 3, 6, 8, 10], owner: undefined },\r\n        { id: 6, pos: p5.createVector(2, 2), neighbourIndex: [3, 1, 4, 7, 9, 11, 8, 5], owner: undefined },\r\n        { id: 7, pos: p5.createVector(4, 2), neighbourIndex: [4, 2, 12, 9, 6], owner: undefined },\r\n\r\n        { id: 8, pos: p5.createVector(1, 3), neighbourIndex: [5, 6, 11, 10], owner: undefined },\r\n        { id: 9, pos: p5.createVector(3, 3), neighbourIndex: [6, 7, 12, 11], owner: undefined },\r\n\r\n        { id: 10, pos: p5.createVector(0, 4), neighbourIndex: [5, 8, 11], owner: undefined },\r\n        { id: 11, pos: p5.createVector(2, 4), neighbourIndex: [8, 6, 9, 12, 10], owner: undefined },\r\n        { id: 12, pos: p5.createVector(4, 4), neighbourIndex: [9, 7, 11], owner: undefined }\r\n    ];\r\n\r\n    for (const cell of cells) {\r\n        cell.pos = p5.createVector(cell.pos.x * dimension, cell.pos.y * dimension).add(offset);\r\n    }\r\n\r\n    return cells;\r\n}\r\n\r\nexport default CrossBoard;\r\n"],"names":["$0af410a66d517047$var$board","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$28770b279d7ab5b1$export$bfd2dc5313efa3a3","$28770b279d7ab5b1$export$4008efb11b076cd5","MOUSE_BTN","Gamer","$28770b279d7ab5b1$export$73820bb3da69f923","$28770b279d7ab5b1$export$1ea8cd15d9ca5dee","r","top","right","bottom","left","$e93rA","$7Pz0b","$fK5g3","$dc260c8a25c170be$export$2e2bcd8739ae039","constructor","p5","_config","config","size","offset","createVector","showHelpers","currentPlayer","PLAYER","points","$dc260c8a25c170be$var$buildBoard","dimension","cells","pos","neighbourIndex","owner","undefined","cell","x","y","add","cellRadius","update","deltaTime","draw","cursor","ARROW","length","i","strokeWeight","stroke","circle","forEach","index","line","distance","mouseX","mouseY","sub","mag","HAND","noStroke","fill","constrain","a","__esModule","default","options","gui","GUI","autoPlace","domElement","document","getElementById","appendChild","setup","canvas","createCanvas","window","innerWidth","innerHeight","parent","background","pixelDensity","colorMode","HSB","addEventListener","resizeDisplay","resizeCanvas"],"version":3,"file":"board-game.55a595dc.js.map"}