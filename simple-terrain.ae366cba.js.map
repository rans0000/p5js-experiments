{"mappings":"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","sources":["<anon>","src/scripts/simple-terrain.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebf15\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebf15\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $e93rA = parcelRequire(\"e93rA\");\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n/**--------------------------------- */ // variables\n/**--------------------------------- */ // sketch\nconst $27b0833c2e94f2fb$var$sketch = (p5)=>{\n    let terrain;\n    const options = {\n        terrainSize: 100,\n        tileSize: 10,\n        scale: 0.1,\n        generate: ()=>{\n            init(p5);\n        },\n        detail: 4,\n        difference: 0.5\n    };\n    const colorOptions = {\n        deepSea: \"#0000ff\",\n        midlands: \"#00ff00\",\n        mountains: \"#ff0000\"\n    };\n    const gui = new (0, $e93rA.GUI)({\n        autoPlace: false\n    });\n    gui.domElement.id = \"gui\";\n    document.getElementById(\"gui\")?.appendChild(gui.domElement);\n    gui.add(options, \"generate\").name(\"Generate Map\");\n    gui.add(options, \"terrainSize\", 20, 200, 1).name(\"Map Size\").onChange(()=>{\n        init(p5);\n    });\n    gui.add(options, \"tileSize\", 5, 20, 1).name(\"Tile Size\").onChange(()=>{\n        init(p5);\n    });\n    gui.add(options, \"scale\", 0, 0.2, 0.001).name(\"scale\").onChange(()=>{\n        init(p5);\n    });\n    gui.add(options, \"detail\", 1, 16, 0.1).onChange((detail)=>{\n        init(p5);\n    });\n    gui.add(options, \"difference\", 0, 1, 0.01).name(\"Landmass\").onChange((difference)=>{\n        init(p5);\n    });\n    const colorFolder = gui.addFolder(\"colors\");\n    colorFolder.add(colorOptions, \"deepSea\");\n    colorFolder.add(colorOptions, \"midlands\");\n    colorFolder.add(colorOptions, \"mountains\");\n    /** setup */ p5.setup = ()=>{\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\n        canvas.parent(\"app\");\n        p5.background(\"white\");\n        p5.pixelDensity(1);\n        p5.colorMode(p5.HSB);\n        window.addEventListener(\"resize\", ()=>resizeDisplay(p5));\n        p5.noLoop();\n    // init(p5);\n    };\n    /** draw */ p5.draw = ()=>{\n        p5.background(200, 60, 10);\n        init(p5);\n    };\n    /**--------------------------------- */ // functions\n    function resizeDisplay(canvas) {\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\n    }\n    function init(p5) {\n        p5.background(200, 60, 10);\n        terrain = new Terrain(p5, options.terrainSize, options.tileSize);\n    }\n    /**--------------------------------- */ // classes\n    class Terrain {\n        constructor(p5, terrainSize, tileSize){\n            this.p5 = p5;\n            this.terrainSize = terrainSize;\n            this.tileSize = tileSize;\n            this.tiles = [];\n            this.buildTiles();\n        }\n        update() {}\n        draw() {}\n        buildTiles() {\n            this.tiles = [];\n            for(let i = 0; i < this.terrainSize; i++)for(let j = 0; j < this.terrainSize; j++){\n                this.p5.noiseDetail(options.detail, options.difference);\n                const elavation = p5.noise(i * options.scale, j * options.scale);\n                const tile = new Tile(this.p5, this.p5.createVector(i, j), elavation, this.tileSize);\n                this.tiles.push(tile);\n                tile.draw();\n            }\n        }\n    }\n    class Tile {\n        constructor(p5, pos, elevation, size){\n            this.p5 = p5;\n            this.pos = pos;\n            this.elevation = elevation;\n            this.size = size;\n        }\n        update() {}\n        draw() {\n            this.p5.push();\n            this.p5.translate(this.pos.x * this.size, this.pos.y * this.size);\n            // this.p5.stroke(1);\n            this.drawTile();\n            this.p5.pop();\n        }\n        drawTile() {\n            const elevation = this.p5.map(this.elevation, 0, 1, -1, 1);\n            let color = colorOptions.deepSea;\n            if (elevation > 0) color = colorOptions.midlands;\n            if (elevation > 0.8) color = colorOptions.mountains;\n            this.p5.noStroke();\n            this.p5.fill(color);\n            this.p5.rect(0, 0, this.size);\n        }\n    }\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($27b0833c2e94f2fb$var$sketch);\n\n\n//# sourceMappingURL=simple-terrain.ae366cba.js.map\n","import { GUI } from 'dat.gui';\r\nimport P5 from 'p5';\r\n\r\n/**--------------------------------- */\r\n// variables\r\n\r\n/**--------------------------------- */\r\n// sketch\r\nconst sketch = (p5: P5) => {\r\n    let terrain: Terrain;\r\n    const options = {\r\n        terrainSize: 100,\r\n        tileSize: 10,\r\n        scale: 0.1,\r\n        generate: () => {\r\n            init(p5);\r\n        },\r\n        detail: 4,\r\n        difference: 0.5\r\n    };\r\n    const colorOptions = {\r\n        deepSea: '#0000ff',\r\n        midlands: '#00ff00',\r\n        mountains: '#ff0000'\r\n    };\r\n    const gui = new GUI({ autoPlace: false });\r\n    gui.domElement.id = 'gui';\r\n    document.getElementById('gui')?.appendChild(gui.domElement);\r\n    gui.add(options, 'generate').name('Generate Map');\r\n    gui.add(options, 'terrainSize', 20, 200, 1)\r\n        .name('Map Size')\r\n        .onChange(() => {\r\n            init(p5);\r\n        });\r\n    gui.add(options, 'tileSize', 5, 20, 1)\r\n        .name('Tile Size')\r\n        .onChange(() => {\r\n            init(p5);\r\n        });\r\n    gui.add(options, 'scale', 0, 0.2, 0.001)\r\n        .name('scale')\r\n        .onChange(() => {\r\n            init(p5);\r\n        });\r\n    gui.add(options, 'detail', 1, 16, 0.1).onChange((detail: number) => {\r\n        init(p5);\r\n    });\r\n    gui.add(options, 'difference', 0, 1, 0.01)\r\n        .name('Landmass')\r\n        .onChange((difference: number) => {\r\n            init(p5);\r\n        });\r\n    const colorFolder = gui.addFolder('colors');\r\n    colorFolder.add(colorOptions, 'deepSea');\r\n    colorFolder.add(colorOptions, 'midlands');\r\n    colorFolder.add(colorOptions, 'mountains');\r\n\r\n    /** setup */\r\n    p5.setup = () => {\r\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\r\n        canvas.parent('app');\r\n        p5.background('white');\r\n        p5.pixelDensity(1);\r\n        p5.colorMode(p5.HSB);\r\n        window.addEventListener('resize', () => resizeDisplay(p5));\r\n        p5.noLoop();\r\n        // init(p5);\r\n    };\r\n\r\n    /** draw */\r\n    p5.draw = () => {\r\n        p5.background(200, 60, 10);\r\n        init(p5);\r\n    };\r\n\r\n    /**--------------------------------- */\r\n    // functions\r\n\r\n    function resizeDisplay(canvas: P5) {\r\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    function init(p5: P5) {\r\n        p5.background(200, 60, 10);\r\n        terrain = new Terrain(p5, options.terrainSize, options.tileSize);\r\n    }\r\n\r\n    /**--------------------------------- */\r\n    // classes\r\n\r\n    class Terrain {\r\n        p5: P5;\r\n        terrainSize: number;\r\n        tileSize: number;\r\n        tiles: Tile[];\r\n\r\n        constructor(p5: P5, terrainSize: number, tileSize: number) {\r\n            this.p5 = p5;\r\n            this.terrainSize = terrainSize;\r\n            this.tileSize = tileSize;\r\n            this.tiles = [];\r\n            this.buildTiles();\r\n        }\r\n\r\n        update() {}\r\n\r\n        draw() {}\r\n\r\n        buildTiles() {\r\n            this.tiles = [];\r\n            for (let i = 0; i < this.terrainSize; i++) {\r\n                for (let j = 0; j < this.terrainSize; j++) {\r\n                    this.p5.noiseDetail(options.detail, options.difference);\r\n                    const elavation = p5.noise(i * options.scale, j * options.scale);\r\n                    const tile = new Tile(this.p5, this.p5.createVector(i, j), elavation, this.tileSize);\r\n                    this.tiles.push(tile);\r\n                    tile.draw();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    class Tile {\r\n        p5: P5;\r\n        pos: P5.Vector;\r\n        elevation: number;\r\n        size: number;\r\n\r\n        constructor(p5: P5, pos: P5.Vector, elevation: number, size: number) {\r\n            this.p5 = p5;\r\n            this.pos = pos;\r\n            this.elevation = elevation;\r\n            this.size = size;\r\n        }\r\n\r\n        update() {}\r\n\r\n        draw() {\r\n            this.p5.push();\r\n            this.p5.translate(this.pos.x * this.size, this.pos.y * this.size);\r\n            // this.p5.stroke(1);\r\n            this.drawTile();\r\n            this.p5.pop();\r\n        }\r\n\r\n        drawTile() {\r\n            const elevation = this.p5.map(this.elevation, 0, 1, -1, 1);\r\n            let color = colorOptions.deepSea;\r\n            if (elevation > 0) color = colorOptions.midlands;\r\n            if (elevation > 0.8) color = colorOptions.mountains;\r\n\r\n            this.p5.noStroke();\r\n            this.p5.fill(color);\r\n            this.p5.rect(0, 0, this.size);\r\n        }\r\n    }\r\n};\r\n\r\nnew P5(sketch);\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$e93rA","$7Pz0b","a","__esModule","default","p5","options","terrainSize","tileSize","scale","generate","detail","difference","colorOptions","deepSea","midlands","mountains","gui","GUI","autoPlace","domElement","document","getElementById","appendChild","add","name","onChange","colorFolder","addFolder","background","Terrain","setup","canvas","createCanvas","window","innerWidth","innerHeight","parent","pixelDensity","colorMode","HSB","addEventListener","resizeDisplay","resizeCanvas","noLoop","draw","constructor","tiles","buildTiles","update","i","j","noiseDetail","elavation","noise","tile","Tile","createVector","push","pos","elevation","size","translate","x","y","drawTile","pop","map","color","noStroke","fill","rect"],"version":3,"file":"simple-terrain.ae366cba.js.map"}