{"mappings":"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","sources":["<anon>","src/scripts/polar-coordinates.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebf15\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebf15\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $e93rA = parcelRequire(\"e93rA\");\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n/**--------------------------------- */ // variables\n/**--------------------------------- */ // sketch\nconst $b05003fde0e84cb4$var$sketch = (p5)=>{\n    const options = {};\n    let angle = 0;\n    const gui = new (0, $e93rA.GUI)({\n        autoPlace: false\n    });\n    gui.domElement.id = \"gui\";\n    document.getElementById(\"gui\")?.appendChild(gui.domElement);\n    /** setup */ p5.setup = ()=>{\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\n        canvas.parent(\"app\");\n        p5.background(\"white\");\n        p5.pixelDensity(1);\n        p5.colorMode(p5.HSB);\n        window.addEventListener(\"resize\", ()=>resizeDisplay(p5));\n        init(p5);\n    };\n    /** draw */ p5.draw = ()=>{\n        p5.background(200, 60, 10);\n        planet(150, 300);\n        spiral(400, 300);\n        randomSpiral(650, 300);\n        sinWave(150, 700);\n    };\n    /**--------------------------------- */ // functions\n    function resizeDisplay(canvas) {\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\n    }\n    function init(p5) {\n        p5.background(200, 60, 10);\n    }\n    function sinWave(x, y) {\n        let px = 0;\n        let py = 0;\n        let angle = 0;\n        const length = 500;\n        const increment = 1;\n        const frequency = p5.map(p5.mouseX, 0, window.innerWidth, 50, 10);\n        const dx = p5.PI / frequency;\n        p5.push();\n        p5.translate(x, y);\n        p5.stroke(255);\n        p5.noFill();\n        // p5.beginShape();\n        for(let i = 0; i < length; i++){\n            const x = px + increment;\n            angle += dx;\n            const y = p5.sin(angle) * 20;\n            p5.line(px, py, x, y);\n            px = x;\n            py = y;\n        }\n        // p5.endShape();\n        p5.pop();\n    }\n    function randomSpiral(x, y) {\n        p5.push();\n        p5.translate(x, y);\n        p5.stroke(255);\n        p5.noFill();\n        const angle = p5.PI / 24;\n        const scale = 0.4;\n        const length = 300;\n        const twist = p5.map(p5.mouseX, 0, window.innerWidth, 1, 360);\n        let prevX, prevY = 0;\n        for(let i = 0; i < length; i++){\n            const length = p5.sin(p5.PI / twist * i * 40) * 5 + i * scale;\n            const x = p5.cos(angle * i) * length;\n            const y = p5.sin(angle * i) * length;\n            p5.line(prevX, prevY, x, y);\n            prevX = x;\n            prevY = y;\n        }\n        p5.pop();\n    }\n    function spiral(x, y) {\n        p5.push();\n        p5.translate(x, y);\n        p5.stroke(255);\n        p5.noFill();\n        const turns = p5.PI / 24;\n        const scale = 0.2;\n        const length = 500;\n        let prevX = 0;\n        let prevY = 0;\n        for(let i = 0; i < length; i++){\n            const x = p5.cos(turns * i) * (i * scale);\n            const y = p5.sin(turns * i) * (i * scale);\n            p5.line(prevX, prevY, x, y);\n            prevX = x;\n            prevY = y;\n        }\n        p5.pop();\n    }\n    function planet(x, y) {\n        angle += 0.04;\n        p5.push();\n        p5.translate(x, y);\n        p5.stroke(255);\n        p5.noFill();\n        p5.circle(0, 0, 200);\n        p5.pop();\n        p5.push();\n        p5.translate(x, y);\n        p5.rotate(angle);\n        p5.stroke(255);\n        p5.circle(100, 0, 20);\n        p5.pop();\n    }\n/**--------------------------------- */ // classes\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($b05003fde0e84cb4$var$sketch);\n\n\n//# sourceMappingURL=polar-coordinates.3a4bd075.js.map\n","import { GUI } from 'dat.gui';\r\nimport P5 from 'p5';\r\n\r\n/**--------------------------------- */\r\n// variables\r\n\r\n/**--------------------------------- */\r\n// sketch\r\nconst sketch = (p5: P5) => {\r\n    const options = {};\r\n    let angle = 0;\r\n\r\n    const gui = new GUI({ autoPlace: false });\r\n    gui.domElement.id = 'gui';\r\n    document.getElementById('gui')?.appendChild(gui.domElement);\r\n\r\n    /** setup */\r\n    p5.setup = () => {\r\n        const canvas = p5.createCanvas(window.innerWidth, window.innerHeight);\r\n        canvas.parent('app');\r\n        p5.background('white');\r\n        p5.pixelDensity(1);\r\n        p5.colorMode(p5.HSB);\r\n        window.addEventListener('resize', () => resizeDisplay(p5));\r\n        init(p5);\r\n    };\r\n\r\n    /** draw */\r\n    p5.draw = () => {\r\n        p5.background(200, 60, 10);\r\n\r\n        planet(150, 300);\r\n        spiral(400, 300);\r\n        randomSpiral(650, 300);\r\n        sinWave(150, 700);\r\n    };\r\n\r\n    /**--------------------------------- */\r\n    // functions\r\n\r\n    function resizeDisplay(canvas: P5) {\r\n        canvas.resizeCanvas(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    function init(p5: P5) {\r\n        p5.background(200, 60, 10);\r\n    }\r\n\r\n    function sinWave(x: number, y: number) {\r\n        let px = 0;\r\n        let py = 0;\r\n        let angle = 0;\r\n        const length = 500;\r\n        const increment = 1;\r\n        const frequency = p5.map(p5.mouseX, 0, window.innerWidth, 50, 10);\r\n        const dx = p5.PI / frequency;\r\n\r\n        p5.push();\r\n        p5.translate(x, y);\r\n        p5.stroke(255);\r\n        p5.noFill();\r\n        // p5.beginShape();\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const x = px + increment;\r\n            angle += dx;\r\n            const y = p5.sin(angle) * 20;\r\n            p5.line(px, py, x, y);\r\n\r\n            px = x;\r\n            py = y;\r\n        }\r\n\r\n        // p5.endShape();\r\n        p5.pop();\r\n    }\r\n\r\n    function randomSpiral(x: number, y: number) {\r\n        p5.push();\r\n        p5.translate(x, y);\r\n        p5.stroke(255);\r\n        p5.noFill();\r\n\r\n        const angle = p5.PI / 24;\r\n        const scale = 0.4;\r\n        const length = 300;\r\n        const twist = p5.map(p5.mouseX, 0, window.innerWidth, 1, 360);\r\n        let prevX,\r\n            prevY = 0;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const length = p5.sin((p5.PI / twist) * i * 40) * 5 + i * scale;\r\n            const x = p5.cos(angle * i) * length;\r\n            const y = p5.sin(angle * i) * length;\r\n            p5.line(prevX, prevY, x, y);\r\n            prevX = x;\r\n            prevY = y;\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    function spiral(x: number, y: number) {\r\n        p5.push();\r\n        p5.translate(x, y);\r\n        p5.stroke(255);\r\n        p5.noFill();\r\n\r\n        const turns = p5.PI / 24;\r\n        const scale = 0.2;\r\n        const length = 500;\r\n        let prevX = 0;\r\n        let prevY = 0;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const x = p5.cos(turns * i) * (i * scale);\r\n            const y = p5.sin(turns * i) * (i * scale);\r\n            p5.line(prevX, prevY, x, y);\r\n            prevX = x;\r\n            prevY = y;\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    function planet(x: number, y: number) {\r\n        angle += 0.04;\r\n\r\n        p5.push();\r\n        p5.translate(x, y);\r\n        p5.stroke(255);\r\n        p5.noFill();\r\n        p5.circle(0, 0, 200);\r\n        p5.pop();\r\n\r\n        p5.push();\r\n        p5.translate(x, y);\r\n        p5.rotate(angle);\r\n        p5.stroke(255);\r\n        p5.circle(100, 0, 20);\r\n        p5.pop();\r\n    }\r\n\r\n    /**--------------------------------- */\r\n    // classes\r\n};\r\n\r\nnew P5(sketch);\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$e93rA","$7Pz0b","a","__esModule","default","p5","angle","gui","GUI","autoPlace","domElement","document","getElementById","appendChild","setup","canvas","createCanvas","window","innerWidth","innerHeight","parent","background","pixelDensity","colorMode","HSB","addEventListener","resizeDisplay","resizeCanvas","draw","push","translate","stroke","noFill","circle","pop","rotate","spiral","x","y","turns","PI","prevX","prevY","i","cos","sin","line","randomSpiral","twist","map","mouseX","length","sinWave","px","py","frequency","dx"],"version":3,"file":"polar-coordinates.3a4bd075.js.map"}